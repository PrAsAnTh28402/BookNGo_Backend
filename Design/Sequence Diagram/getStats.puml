@startuml GetEventStats
actor Admin
participant "EventRoutes" as R
participant "EventController" as C
participant "EventModel" as EM
participant "BookingModel" as BM
database "Database" as DB

Admin -> R : GET /api/events/stats
R -> C : getEventStats()

C -> EM : countAllEvents()
EM -> DB : SELECT COUNT(*) FROM events
DB --> EM : total_events
EM --> C : total_events

C -> EM : countActiveEvents()
EM -> DB : SELECT COUNT(*) FROM events WHERE is_active = TRUE
DB --> EM : active_events
EM --> C : active_events

C -> EM : countCancelledEvents()
EM -> DB : SELECT COUNT(*) FROM events WHERE is_active = FALSE
DB --> EM : cancelled_events
EM --> C : cancelled_events

C -> BM : countAllBookings()
BM -> DB : SELECT COUNT(*) FROM bookings
DB --> BM : total_bookings
BM --> C : total_bookings

C --> R : { total_events, active_events, cancelled_events, total_bookings }
R --> Admin : JSON Response
@enduml
