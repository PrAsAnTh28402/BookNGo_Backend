@startuml
actor Client

Client -> CategoriesController : GET /api/categories
activate CategoriesController

CategoriesController -> CategoriesService : fetchAllCategories()
activate CategoriesService

CategoriesService -> CategoriesRepository : getAllCategoriesFromDB()
activate CategoriesRepository

note right of CategoriesRepository
  SQL Query:
  SELECT category_id, name
  FROM categories
  ORDER BY name ASC;
end note

CategoriesRepository -> Database : Execute SQL
activate Database

Database --> CategoriesRepository : result.rows[]
deactivate Database

note right of CategoriesRepository
  Example result.rows:
  [
    {category_id: 1, name: "Concert"},
    {category_id: 2, name: "Sports"}
  ]
end note

CategoriesRepository --> CategoriesService : categoriesList
deactivate CategoriesRepository

CategoriesService -> CategoriesService : validate categoriesList
note right
  if categoriesList is empty → return []
  if error → throw exception
end note

CategoriesService --> CategoriesController : categoriesList
deactivate CategoriesService

CategoriesController -> CategoriesController : formatResponse(categoriesList)
note right
  JSON Response:
  [
    {"category_id":1,"name":"Concert"},
    {"category_id":2,"name":"Sports"}
  ]
end note

CategoriesController --> Client : 200 OK + JSON
deactivate CategoriesController

== Error Flow ==
Database --> CategoriesRepository : Error
CategoriesRepository --> CategoriesService : throw error
CategoriesService --> CategoriesController : throw error
CategoriesController --> Client : 500 Internal Server Error
note right
  {"error": "Failed to fetch categories"}
end note
@enduml
